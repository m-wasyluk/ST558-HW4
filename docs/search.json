[
  {
    "objectID": "tidyverse_reading_manipulating_data.html",
    "href": "tidyverse_reading_manipulating_data.html",
    "title": "Tidyverse Reading and Manipulating Data",
    "section": "",
    "text": "#|echo: false\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(readr)\nlibrary(purrr)\nlibrary(curl)\n\nUsing libcurl 8.3.0 with Schannel\n\n\n\nAttaching package: 'curl'\n\n\nThe following object is masked from 'package:readr':\n\n    parse_date\n\nlibrary(readxl)"
  },
  {
    "objectID": "tidyverse_reading_manipulating_data.html#task-1",
    "href": "tidyverse_reading_manipulating_data.html#task-1",
    "title": "Tidyverse Reading and Manipulating Data",
    "section": "Task 1",
    "text": "Task 1\n\nIf your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\nWe could specify ../MyData.csv.\n\n\nWhat are the major benefits of using R projects?\n\n\nR projects ensure that your project working directory is correctly set and can keep tabs on your scripts and imports, essentially forming an encapsulated version of your work.\n\n\nWhat is git and what is github?\n\n\nGit is version control software that allows us to maintain a history of changes to code. Github is a service that maintains web-based repositories for us.\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\nA tibble does “fancy” printing of data and does not coerce selection with [] into vectors.\n\n\nRewrite the following nested function call using BaseR’s chaining operator:\n\narrange(filter(select(as_tibble(iris), starts_with(\"Petal\"), Species),\nPetal.Length &lt; 1.55), Species)\n\nas_tibble(iris) |&gt; \n  select(starts_with(\"Petal\"), Species) |&gt; \n  filter(Petal.Length &lt; 1.55) |&gt; \n  arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows"
  },
  {
    "objectID": "tidyverse_reading_manipulating_data.html#task-2-glass",
    "href": "tidyverse_reading_manipulating_data.html#task-2-glass",
    "title": "Tidyverse Reading and Manipulating Data",
    "section": "Task 2 Glass",
    "text": "Task 2 Glass\nread data and add column names\n\nglass_cols &lt;- c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\", \"Type of Glass\")\n\nglass_tbl &lt;- read_csv(\"https://www4.stat.ncsu.edu/online/datasets/glass.data\", col_names = glass_cols) \n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Type of Glass\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\ncreate a factor to represent the types of glass, then pass to filter with our conditions\n\nglass_type_labels &lt;- c(\" building_windows_float_processed\",\n                       \" building_windows_non_float_processed\",\n                       \"vehicle_windows_float_processed\",\n                       \"vehicle_windows_non_float_processed\",\n                       \"containers\",\n                       \"tableware\",\n                       \"headlamps\")\n\nglass_tbl |&gt; \n  mutate(`Type of Glass` = factor(`Type of Glass`, levels = seq(1:7), labels = glass_type_labels)) |&gt; \n  filter(Fe &lt; .2 & (`Type of Glass` == \"tableware\" | `Type of Glass` == \"headlamps\"))\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe `Type of Glass`\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;          \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware      \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware      \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware      \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware      \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware      \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware      \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware      \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware      \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware      \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps      \n# ℹ 28 more rows"
  },
  {
    "objectID": "tidyverse_reading_manipulating_data.html#task-2-yeast",
    "href": "tidyverse_reading_manipulating_data.html#task-2-yeast",
    "title": "Tidyverse Reading and Manipulating Data",
    "section": "Task 2 Yeast",
    "text": "Task 2 Yeast\nread, add column names, and remove undesired columns\n\nyeast_cols &lt;- c(\"seq_name\", \"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\", \"pox\", \"vac\", \"nuc\", \"class\")\nyeast_col_widths &lt;- c(12, 6, 6, 6, 6, 6, 6, 6, 6, 3)\n\nyeast_dl &lt;- curl(\"https://www4.stat.ncsu.edu/online/datasets/yeast.data\")\nyeast_tbl &lt;- read_fwf(\"https://www4.stat.ncsu.edu/online/datasets/yeast.data\",\n                      col_positions = fwf_widths(widths = yeast_col_widths, col_names = yeast_cols)) |&gt; \n  select(-seq_name, -nuc)\n\nRows: 1484 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\n\nchr (2): seq_name, class\ndbl (8): mcg, gvh, alm, mit, erl, pox, vac, nuc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nadd mean and medians by class\n\nyeast_tbl |&gt; \n  group_by(class) |&gt; \n  mutate(across(where(is.numeric), list(mean = mean, med = median), .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mcg_mean mcg_med gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521    0.51    0.533\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521    0.51    0.533\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521    0.51    0.533\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452    0.45    0.456\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521    0.51    0.533\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481    0.48    0.470\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521    0.51    0.533\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452    0.45    0.456\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521    0.51    0.533\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481    0.48    0.470\n# ℹ 1,474 more rows\n# ℹ 11 more variables: gvh_med &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_med &lt;dbl&gt;,\n#   mit_mean &lt;dbl&gt;, mit_med &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_med &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_med &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_med &lt;dbl&gt;"
  },
  {
    "objectID": "tidyverse_reading_manipulating_data.html#task-3",
    "href": "tidyverse_reading_manipulating_data.html#task-3",
    "title": "Tidyverse Reading and Manipulating Data",
    "section": "Task 3",
    "text": "Task 3\nimport and print white wine data\n\nwhite_wine_tbl &lt;- read_xlsx(\"./data/white-wine.xlsx\", sheet = 1)\nwhite_wine_tbl\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\nread names and apply to previous tibble, then add white column\n\nwhite_wine_cols &lt;- read_xlsx(\"./data/white-wine.xlsx\", sheet = 2) |&gt; \n  pull(1)\n\nwhite_wine_tbl &lt;- white_wine_tbl |&gt; \n  set_names(white_wine_cols) |&gt; \n  mutate(color = \"white\")\n\nwhite_wine_tbl\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   color &lt;chr&gt;\n\n\nread and replace variable names as above, but for red wine this time\n\nred_wine_tbl &lt;- read_delim(\"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\", col_names = FALSE, delim = \";\", skip = 1)\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nred_wine_tbl &lt;- red_wine_tbl |&gt; \n  set_names(white_wine_cols) |&gt; \n  mutate(color = \"red\")\n\nred_wine_tbl\n\n# A tibble: 1,599 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.4             0.7         0               1.9     0.076\n 2           7.8             0.88        0               2.6     0.098\n 3           7.8             0.76        0.04            2.3     0.092\n 4          11.2             0.28        0.56            1.9     0.075\n 5           7.4             0.7         0               1.9     0.076\n 6           7.4             0.66        0               1.8     0.075\n 7           7.9             0.6         0.06            1.6     0.069\n 8           7.3             0.65        0               1.2     0.065\n 9           7.8             0.58        0.02            2       0.073\n10           7.5             0.5         0.36            6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   color &lt;chr&gt;\n\n\nnow we combine and use a chain to filter, sort, select, and summarize\n\nwine_tbl &lt;- bind_rows(red_wine_tbl, white_wine_tbl) |&gt; \n  filter(quality &gt; 6.5 & alcohol &lt; 132) |&gt; \n  arrange(desc(quality)) |&gt; \n  select(contains(\"acid\"), alcohol, color, quality) |&gt; \n  group_by(quality) |&gt; \n  mutate(qual_grp_alc_mean = mean(alcohol), qual_grp_alc_sd = sd(alcohol))\n\nwine_tbl\n\n# A tibble: 1,206 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol color quality\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1          91               0.27        0.45   104   white       9\n 2          66               0.36        0.29   124   white       9\n 3          74               0.24        0.36   125   white       9\n 4          69               0.36        0.34   127   white       9\n 5          71               0.26        0.49   129   white       9\n 6           7.9             0.35        0.46    12.8 red         8\n 7          10.3             0.32        0.45    12.6 red         8\n 8           5.6             0.85        0.05    12.9 red         8\n 9          12.6             0.31        0.72     9.8 red         8\n10          11.3             0.62        0.67    13.4 red         8\n# ℹ 1,196 more rows\n# ℹ 2 more variables: qual_grp_alc_mean &lt;dbl&gt;, qual_grp_alc_sd &lt;dbl&gt;"
  }
]